PRAGMA features := limit interpolation subQuery aggregate binding
PRAGMA events
{"time":"2020-03-12T16:33:05Z","tags":["item","item:someUUID1","itemCreated"],"payload":{"id":"someUUID1","text":"TODO 1","type":"created"}}
{"time":"2022-03-12T16:33:15Z","tags":["item","item:someUUID2","itemCreated"],"payload":{"id":"someUUID2","text":"TODO 2","type":"created"}}
{"time":"2022-03-12T16:34:14Z","tags":["item","item:someUUID3","itemCreated"],"payload":{"id":"someUUID3","text":"TODO 3","type":"created"}}
{"time":"2022-03-12T16:48:05Z","tags":["item","item:someUUID3"],"payload":{"id":"someUUID3","text":"TODO 1","type":"textChanged"}}
{"time":"2022-03-12T16:53:15Z","tags":["item","item:someUUID4","itemCreated"],"payload":{"id":"someUUID4","text":"TODO 1","type":"created"}}
{"time":"2022-03-12T16:54:14Z","tags":["item","item:someUUID4"],"payload":{"id":"someUUID4","text":"TODO 4","type":"textChanged"}}
ENDPRAGMA

FROM 'itemCreated'
LET itemId := _.id
LET latest :=
    FROM `item:{itemId}`
    AGGREGATE {
        text: LAST(_.text),
        changes: SUM(
            CASE _.type = 'textChanged' => 1
            CASE _.type = 'created' => 0
            ENDCASE -- if neither case matches, donâ€™t create a value to sum up
        )
    }
    END
LET latest := latest[0] -- only the latest definition of a variable is seen below
SELECT {
    id: itemId,
    text: latest.text,
    changes: latest.changes,
}


//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Actyx.Documents.Driver {

public class automerge {
  public static SWIGTYPE_p_unsigned_char new_bytes(int nelements) {
    global::System.IntPtr cPtr = automergePINVOKE.new_bytes(nelements);
    SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    return ret;
  }

  public static void delete_bytes(SWIGTYPE_p_unsigned_char ary) {
    automergePINVOKE.delete_bytes(SWIGTYPE_p_unsigned_char.getCPtr(ary));
  }

  public static byte bytes_getitem(SWIGTYPE_p_unsigned_char ary, int index) {
    byte ret = automergePINVOKE.bytes_getitem(SWIGTYPE_p_unsigned_char.getCPtr(ary), index);
    return ret;
  }

  public static void bytes_setitem(SWIGTYPE_p_unsigned_char ary, int index, byte value) {
    automergePINVOKE.bytes_setitem(SWIGTYPE_p_unsigned_char.getCPtr(ary), index, value);
  }

  public static AMbyteSpan AMactorIdBytes(SWIGTYPE_p_AMactorId actor_id) {
    AMbyteSpan ret = new AMbyteSpan(automergePINVOKE.AMactorIdBytes(SWIGTYPE_p_AMactorId.getCPtr(actor_id)), true);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMactorIdInit() {
    global::System.IntPtr cPtr = automergePINVOKE.AMactorIdInit();
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMactorIdInitBytes(SWIGTYPE_p_unsigned_char src, uint count) {
    global::System.IntPtr cPtr = automergePINVOKE.AMactorIdInitBytes(SWIGTYPE_p_unsigned_char.getCPtr(src), count);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMactorIdInitStr(string hex_str) {
    global::System.IntPtr cPtr = automergePINVOKE.AMactorIdInitStr(hex_str);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static string AMactorIdStr(SWIGTYPE_p_AMactorId actor_id) {
    string ret = automergePINVOKE.AMactorIdStr(SWIGTYPE_p_AMactorId.getCPtr(actor_id));
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMchangeActorId(SWIGTYPE_p_AMchange change) {
    global::System.IntPtr cPtr = automergePINVOKE.AMchangeActorId(SWIGTYPE_p_AMchange.getCPtr(change));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static void AMchangeCompress(SWIGTYPE_p_AMchange change) {
    automergePINVOKE.AMchangeCompress(SWIGTYPE_p_AMchange.getCPtr(change));
  }

  public static AMchangeHashes AMchangeDeps(SWIGTYPE_p_AMchange change) {
    AMchangeHashes ret = new AMchangeHashes(automergePINVOKE.AMchangeDeps(SWIGTYPE_p_AMchange.getCPtr(change)), true);
    return ret;
  }

  public static AMbyteSpan AMchangeExtraBytes(SWIGTYPE_p_AMchange change) {
    AMbyteSpan ret = new AMbyteSpan(automergePINVOKE.AMchangeExtraBytes(SWIGTYPE_p_AMchange.getCPtr(change)), true);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMchangeFromBytes(SWIGTYPE_p_unsigned_char src, uint count) {
    global::System.IntPtr cPtr = automergePINVOKE.AMchangeFromBytes(SWIGTYPE_p_unsigned_char.getCPtr(src), count);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static AMbyteSpan AMchangeHash(SWIGTYPE_p_AMchange change) {
    AMbyteSpan ret = new AMbyteSpan(automergePINVOKE.AMchangeHash(SWIGTYPE_p_AMchange.getCPtr(change)), true);
    return ret;
  }

  public static bool AMchangeIsEmpty(SWIGTYPE_p_AMchange change) {
    bool ret = automergePINVOKE.AMchangeIsEmpty(SWIGTYPE_p_AMchange.getCPtr(change));
    return ret;
  }

  public static ulong AMchangeMaxOp(SWIGTYPE_p_AMchange change) {
    ulong ret = automergePINVOKE.AMchangeMaxOp(SWIGTYPE_p_AMchange.getCPtr(change));
    return ret;
  }

  public static string AMchangeMessage(SWIGTYPE_p_AMchange change) {
    string ret = automergePINVOKE.AMchangeMessage(SWIGTYPE_p_AMchange.getCPtr(change));
    return ret;
  }

  public static ulong AMchangeSeq(SWIGTYPE_p_AMchange change) {
    ulong ret = automergePINVOKE.AMchangeSeq(SWIGTYPE_p_AMchange.getCPtr(change));
    return ret;
  }

  public static uint AMchangeSize(SWIGTYPE_p_AMchange change) {
    uint ret = automergePINVOKE.AMchangeSize(SWIGTYPE_p_AMchange.getCPtr(change));
    return ret;
  }

  public static ulong AMchangeStartOp(SWIGTYPE_p_AMchange change) {
    ulong ret = automergePINVOKE.AMchangeStartOp(SWIGTYPE_p_AMchange.getCPtr(change));
    return ret;
  }

  public static long AMchangeTime(SWIGTYPE_p_AMchange change) {
    long ret = automergePINVOKE.AMchangeTime(SWIGTYPE_p_AMchange.getCPtr(change));
    return ret;
  }

  public static AMbyteSpan AMchangeRawBytes(SWIGTYPE_p_AMchange change) {
    AMbyteSpan ret = new AMbyteSpan(automergePINVOKE.AMchangeRawBytes(SWIGTYPE_p_AMchange.getCPtr(change)), true);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMchangeLoadDocument(SWIGTYPE_p_unsigned_char src, uint count) {
    global::System.IntPtr cPtr = automergePINVOKE.AMchangeLoadDocument(SWIGTYPE_p_unsigned_char.getCPtr(src), count);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static void AMchangeHashesAdvance(AMchangeHashes change_hashes, int n) {
    automergePINVOKE.AMchangeHashesAdvance(AMchangeHashes.getCPtr(change_hashes), n);
  }

  public static int AMchangeHashesCmp(AMchangeHashes change_hashes1, AMchangeHashes change_hashes2) {
    int ret = automergePINVOKE.AMchangeHashesCmp(AMchangeHashes.getCPtr(change_hashes1), AMchangeHashes.getCPtr(change_hashes2));
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMchangeHashesInit(AMbyteSpan src, uint count) {
    global::System.IntPtr cPtr = automergePINVOKE.AMchangeHashesInit(AMbyteSpan.getCPtr(src), count);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static AMbyteSpan AMchangeHashesNext(AMchangeHashes change_hashes, int n) {
    AMbyteSpan ret = new AMbyteSpan(automergePINVOKE.AMchangeHashesNext(AMchangeHashes.getCPtr(change_hashes), n), true);
    return ret;
  }

  public static AMbyteSpan AMchangeHashesPrev(AMchangeHashes change_hashes, int n) {
    AMbyteSpan ret = new AMbyteSpan(automergePINVOKE.AMchangeHashesPrev(AMchangeHashes.getCPtr(change_hashes), n), true);
    return ret;
  }

  public static uint AMchangeHashesSize(AMchangeHashes change_hashes) {
    uint ret = automergePINVOKE.AMchangeHashesSize(AMchangeHashes.getCPtr(change_hashes));
    return ret;
  }

  public static AMchangeHashes AMchangeHashesReversed(AMchangeHashes change_hashes) {
    AMchangeHashes ret = new AMchangeHashes(automergePINVOKE.AMchangeHashesReversed(AMchangeHashes.getCPtr(change_hashes)), true);
    return ret;
  }

  public static void AMchangesAdvance(AMchanges changes, int n) {
    automergePINVOKE.AMchangesAdvance(AMchanges.getCPtr(changes), n);
  }

  public static bool AMchangesEqual(AMchanges changes1, AMchanges changes2) {
    bool ret = automergePINVOKE.AMchangesEqual(AMchanges.getCPtr(changes1), AMchanges.getCPtr(changes2));
    return ret;
  }

  public static SWIGTYPE_p_AMchange AMchangesNext(AMchanges changes, int n) {
    global::System.IntPtr cPtr = automergePINVOKE.AMchangesNext(AMchanges.getCPtr(changes), n);
    SWIGTYPE_p_AMchange ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMchange(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMchange AMchangesPrev(AMchanges changes, int n) {
    global::System.IntPtr cPtr = automergePINVOKE.AMchangesPrev(AMchanges.getCPtr(changes), n);
    SWIGTYPE_p_AMchange ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMchange(cPtr, false);
    return ret;
  }

  public static uint AMchangesSize(AMchanges changes) {
    uint ret = automergePINVOKE.AMchangesSize(AMchanges.getCPtr(changes));
    return ret;
  }

  public static AMchanges AMchangesReversed(AMchanges changes) {
    AMchanges ret = new AMchanges(automergePINVOKE.AMchangesReversed(AMchanges.getCPtr(changes)), true);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMapplyChanges(SWIGTYPE_p_AMdoc doc, AMchanges changes) {
    global::System.IntPtr cPtr = automergePINVOKE.AMapplyChanges(SWIGTYPE_p_AMdoc.getCPtr(doc), AMchanges.getCPtr(changes));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMcreate() {
    global::System.IntPtr cPtr = automergePINVOKE.AMcreate();
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMcommit(SWIGTYPE_p_AMdoc doc, string message, SWIGTYPE_p_time_t time) {
    global::System.IntPtr cPtr = automergePINVOKE.AMcommit(SWIGTYPE_p_AMdoc.getCPtr(doc), message, SWIGTYPE_p_time_t.getCPtr(time));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMdup(SWIGTYPE_p_AMdoc doc) {
    global::System.IntPtr cPtr = automergePINVOKE.AMdup(SWIGTYPE_p_AMdoc.getCPtr(doc));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static bool AMequal(SWIGTYPE_p_AMdoc doc1, SWIGTYPE_p_AMdoc doc2) {
    bool ret = automergePINVOKE.AMequal(SWIGTYPE_p_AMdoc.getCPtr(doc1), SWIGTYPE_p_AMdoc.getCPtr(doc2));
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMgenerateSyncMessage(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMsyncState sync_state) {
    global::System.IntPtr cPtr = automergePINVOKE.AMgenerateSyncMessage(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMsyncState.getCPtr(sync_state));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMgetActor(SWIGTYPE_p_AMdoc doc) {
    global::System.IntPtr cPtr = automergePINVOKE.AMgetActor(SWIGTYPE_p_AMdoc.getCPtr(doc));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMgetChanges(SWIGTYPE_p_AMdoc doc, AMchangeHashes have_deps) {
    global::System.IntPtr cPtr = automergePINVOKE.AMgetChanges(SWIGTYPE_p_AMdoc.getCPtr(doc), AMchangeHashes.getCPtr(have_deps));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMgetChangesAdded(SWIGTYPE_p_AMdoc doc1, SWIGTYPE_p_AMdoc doc2) {
    global::System.IntPtr cPtr = automergePINVOKE.AMgetChangesAdded(SWIGTYPE_p_AMdoc.getCPtr(doc1), SWIGTYPE_p_AMdoc.getCPtr(doc2));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMgetHeads(SWIGTYPE_p_AMdoc doc) {
    global::System.IntPtr cPtr = automergePINVOKE.AMgetHeads(SWIGTYPE_p_AMdoc.getCPtr(doc));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMgetMissingDeps(SWIGTYPE_p_AMdoc doc, AMchangeHashes heads) {
    global::System.IntPtr cPtr = automergePINVOKE.AMgetMissingDeps(SWIGTYPE_p_AMdoc.getCPtr(doc), AMchangeHashes.getCPtr(heads));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMgetLastLocalChange(SWIGTYPE_p_AMdoc doc) {
    global::System.IntPtr cPtr = automergePINVOKE.AMgetLastLocalChange(SWIGTYPE_p_AMdoc.getCPtr(doc));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMkeys(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, AMchangeHashes heads) {
    global::System.IntPtr cPtr = automergePINVOKE.AMkeys(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), AMchangeHashes.getCPtr(heads));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMload(SWIGTYPE_p_unsigned_char src, uint count) {
    global::System.IntPtr cPtr = automergePINVOKE.AMload(SWIGTYPE_p_unsigned_char.getCPtr(src), count);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMloadIncremental(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_unsigned_char src, uint count) {
    global::System.IntPtr cPtr = automergePINVOKE.AMloadIncremental(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_unsigned_char.getCPtr(src), count);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmerge(SWIGTYPE_p_AMdoc dest, SWIGTYPE_p_AMdoc src) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmerge(SWIGTYPE_p_AMdoc.getCPtr(dest), SWIGTYPE_p_AMdoc.getCPtr(src));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static uint AMobjSize(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, AMchangeHashes heads) {
    uint ret = automergePINVOKE.AMobjSize(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), AMchangeHashes.getCPtr(heads));
    return ret;
  }

  public static uint AMpendingOps(SWIGTYPE_p_AMdoc doc) {
    uint ret = automergePINVOKE.AMpendingOps(SWIGTYPE_p_AMdoc.getCPtr(doc));
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMreceiveSyncMessage(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMsyncState sync_state, SWIGTYPE_p_AMsyncMessage sync_message) {
    global::System.IntPtr cPtr = automergePINVOKE.AMreceiveSyncMessage(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMsyncState.getCPtr(sync_state), SWIGTYPE_p_AMsyncMessage.getCPtr(sync_message));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static uint AMrollback(SWIGTYPE_p_AMdoc doc) {
    uint ret = automergePINVOKE.AMrollback(SWIGTYPE_p_AMdoc.getCPtr(doc));
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMsave(SWIGTYPE_p_AMdoc doc) {
    global::System.IntPtr cPtr = automergePINVOKE.AMsave(SWIGTYPE_p_AMdoc.getCPtr(doc));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMsaveIncremental(SWIGTYPE_p_AMdoc doc) {
    global::System.IntPtr cPtr = automergePINVOKE.AMsaveIncremental(SWIGTYPE_p_AMdoc.getCPtr(doc));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMsetActor(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMactorId actor_id) {
    global::System.IntPtr cPtr = automergePINVOKE.AMsetActor(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMactorId.getCPtr(actor_id));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMspliceText(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index, uint del, string text) {
    global::System.IntPtr cPtr = automergePINVOKE.AMspliceText(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index, del, text);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMtext(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, AMchangeHashes heads) {
    global::System.IntPtr cPtr = automergePINVOKE.AMtext(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), AMchangeHashes.getCPtr(heads));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistDelete(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistDelete(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistGet(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistGet(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistIncrement(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index, long value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistIncrement(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistPutBool(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index, bool insert, bool value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistPutBool(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index, insert, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistPutBytes(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index, bool insert, SWIGTYPE_p_unsigned_char src, uint count) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistPutBytes(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index, insert, SWIGTYPE_p_unsigned_char.getCPtr(src), count);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistPutCounter(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index, bool insert, long value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistPutCounter(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index, insert, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistPutF64(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index, bool insert, double value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistPutF64(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index, insert, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistPutInt(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index, bool insert, long value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistPutInt(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index, insert, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistPutNull(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index, bool insert) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistPutNull(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index, insert);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistPutObject(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index, bool insert, AMobjType obj_type) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistPutObject(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index, insert, (int)obj_type);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistPutStr(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index, bool insert, string value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistPutStr(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index, insert, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistPutTimestamp(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index, bool insert, long value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistPutTimestamp(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index, insert, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMlistPutUint(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, uint index, bool insert, ulong value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMlistPutUint(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), index, insert, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapDelete(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapDelete(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapGet(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapGet(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapIncrement(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key, long value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapIncrement(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapPutBool(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key, bool value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapPutBool(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapPutBytes(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key, SWIGTYPE_p_unsigned_char src, uint count) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapPutBytes(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key, SWIGTYPE_p_unsigned_char.getCPtr(src), count);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapPutCounter(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key, long value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapPutCounter(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapPutNull(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapPutNull(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapPutObject(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key, AMobjType obj_type) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapPutObject(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key, (int)obj_type);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapPutF64(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key, double value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapPutF64(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapPutInt(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key, long value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapPutInt(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapPutStr(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key, string value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapPutStr(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapPutTimestamp(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key, long value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapPutTimestamp(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMmapPutUint(SWIGTYPE_p_AMdoc doc, SWIGTYPE_p_AMobjId obj_id, string key, ulong value) {
    global::System.IntPtr cPtr = automergePINVOKE.AMmapPutUint(SWIGTYPE_p_AMdoc.getCPtr(doc), SWIGTYPE_p_AMobjId.getCPtr(obj_id), key, value);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static string AMerrorMessage(SWIGTYPE_p_AMresult result) {
    string ret = automergePINVOKE.AMerrorMessage(SWIGTYPE_p_AMresult.getCPtr(result));
    return ret;
  }

  public static void AMfree(SWIGTYPE_p_AMresult result) {
    automergePINVOKE.AMfree(SWIGTYPE_p_AMresult.getCPtr(result));
  }

  public static uint AMresultSize(SWIGTYPE_p_AMresult result) {
    uint ret = automergePINVOKE.AMresultSize(SWIGTYPE_p_AMresult.getCPtr(result));
    return ret;
  }

  public static AMstatus AMresultStatus(SWIGTYPE_p_AMresult result) {
    AMstatus ret = (AMstatus)automergePINVOKE.AMresultStatus(SWIGTYPE_p_AMresult.getCPtr(result));
    return ret;
  }

  public static AMvalue AMresultValue(SWIGTYPE_p_AMresult result) {
    AMvalue ret = new AMvalue(automergePINVOKE.AMresultValue(SWIGTYPE_p_AMresult.getCPtr(result)), true);
    return ret;
  }

  public static void AMstringsAdvance(AMstrings strings, int n) {
    automergePINVOKE.AMstringsAdvance(AMstrings.getCPtr(strings), n);
  }

  public static int AMstringsCmp(AMstrings strings1, AMstrings strings2) {
    int ret = automergePINVOKE.AMstringsCmp(AMstrings.getCPtr(strings1), AMstrings.getCPtr(strings2));
    return ret;
  }

  public static string AMstringsNext(AMstrings strings, int n) {
    string ret = automergePINVOKE.AMstringsNext(AMstrings.getCPtr(strings), n);
    return ret;
  }

  public static string AMstringsPrev(AMstrings strings, int n) {
    string ret = automergePINVOKE.AMstringsPrev(AMstrings.getCPtr(strings), n);
    return ret;
  }

  public static uint AMstringsSize(AMstrings strings) {
    uint ret = automergePINVOKE.AMstringsSize(AMstrings.getCPtr(strings));
    return ret;
  }

  public static AMstrings AMstringsReversed(AMstrings strings) {
    AMstrings ret = new AMstrings(automergePINVOKE.AMstringsReversed(AMstrings.getCPtr(strings)), true);
    return ret;
  }

  public static AMchangeHashes AMsyncHaveLastSync(SWIGTYPE_p_AMsyncHave sync_have) {
    AMchangeHashes ret = new AMchangeHashes(automergePINVOKE.AMsyncHaveLastSync(SWIGTYPE_p_AMsyncHave.getCPtr(sync_have)), true);
    return ret;
  }

  public static void AMsyncHavesAdvance(AMsyncHaves sync_haves, int n) {
    automergePINVOKE.AMsyncHavesAdvance(AMsyncHaves.getCPtr(sync_haves), n);
  }

  public static bool AMsyncHavesEqual(AMsyncHaves sync_haves1, AMsyncHaves sync_haves2) {
    bool ret = automergePINVOKE.AMsyncHavesEqual(AMsyncHaves.getCPtr(sync_haves1), AMsyncHaves.getCPtr(sync_haves2));
    return ret;
  }

  public static SWIGTYPE_p_AMsyncHave AMsyncHavesNext(AMsyncHaves sync_haves, int n) {
    global::System.IntPtr cPtr = automergePINVOKE.AMsyncHavesNext(AMsyncHaves.getCPtr(sync_haves), n);
    SWIGTYPE_p_AMsyncHave ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMsyncHave(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMsyncHave AMsyncHavesPrev(AMsyncHaves sync_haves, int n) {
    global::System.IntPtr cPtr = automergePINVOKE.AMsyncHavesPrev(AMsyncHaves.getCPtr(sync_haves), n);
    SWIGTYPE_p_AMsyncHave ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMsyncHave(cPtr, false);
    return ret;
  }

  public static uint AMsyncHavesSize(AMsyncHaves sync_haves) {
    uint ret = automergePINVOKE.AMsyncHavesSize(AMsyncHaves.getCPtr(sync_haves));
    return ret;
  }

  public static AMsyncHaves AMsyncHavesReversed(AMsyncHaves sync_haves) {
    AMsyncHaves ret = new AMsyncHaves(automergePINVOKE.AMsyncHavesReversed(AMsyncHaves.getCPtr(sync_haves)), true);
    return ret;
  }

  public static AMchanges AMsyncMessageChanges(SWIGTYPE_p_AMsyncMessage sync_message) {
    AMchanges ret = new AMchanges(automergePINVOKE.AMsyncMessageChanges(SWIGTYPE_p_AMsyncMessage.getCPtr(sync_message)), true);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMsyncMessageDecode(SWIGTYPE_p_unsigned_char src, uint count) {
    global::System.IntPtr cPtr = automergePINVOKE.AMsyncMessageDecode(SWIGTYPE_p_unsigned_char.getCPtr(src), count);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMsyncMessageEncode(SWIGTYPE_p_AMsyncMessage sync_message) {
    global::System.IntPtr cPtr = automergePINVOKE.AMsyncMessageEncode(SWIGTYPE_p_AMsyncMessage.getCPtr(sync_message));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static AMsyncHaves AMsyncMessageHaves(SWIGTYPE_p_AMsyncMessage sync_message) {
    AMsyncHaves ret = new AMsyncHaves(automergePINVOKE.AMsyncMessageHaves(SWIGTYPE_p_AMsyncMessage.getCPtr(sync_message)), true);
    return ret;
  }

  public static AMchangeHashes AMsyncMessageHeads(SWIGTYPE_p_AMsyncMessage sync_message) {
    AMchangeHashes ret = new AMchangeHashes(automergePINVOKE.AMsyncMessageHeads(SWIGTYPE_p_AMsyncMessage.getCPtr(sync_message)), true);
    return ret;
  }

  public static AMchangeHashes AMsyncMessageNeeds(SWIGTYPE_p_AMsyncMessage sync_message) {
    AMchangeHashes ret = new AMchangeHashes(automergePINVOKE.AMsyncMessageNeeds(SWIGTYPE_p_AMsyncMessage.getCPtr(sync_message)), true);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMsyncStateDecode(SWIGTYPE_p_unsigned_char src, uint count) {
    global::System.IntPtr cPtr = automergePINVOKE.AMsyncStateDecode(SWIGTYPE_p_unsigned_char.getCPtr(src), count);
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMsyncStateEncode(SWIGTYPE_p_AMsyncState sync_state) {
    global::System.IntPtr cPtr = automergePINVOKE.AMsyncStateEncode(SWIGTYPE_p_AMsyncState.getCPtr(sync_state));
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static bool AMsyncStateEqual(SWIGTYPE_p_AMsyncState sync_state1, SWIGTYPE_p_AMsyncState sync_state2) {
    bool ret = automergePINVOKE.AMsyncStateEqual(SWIGTYPE_p_AMsyncState.getCPtr(sync_state1), SWIGTYPE_p_AMsyncState.getCPtr(sync_state2));
    return ret;
  }

  public static SWIGTYPE_p_AMresult AMsyncStateInit() {
    global::System.IntPtr cPtr = automergePINVOKE.AMsyncStateInit();
    SWIGTYPE_p_AMresult ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMresult(cPtr, false);
    return ret;
  }

  public static AMchangeHashes AMsyncStateSharedHeads(SWIGTYPE_p_AMsyncState sync_state) {
    AMchangeHashes ret = new AMchangeHashes(automergePINVOKE.AMsyncStateSharedHeads(SWIGTYPE_p_AMsyncState.getCPtr(sync_state)), true);
    return ret;
  }

  public static AMchangeHashes AMsyncStateLastSentHeads(SWIGTYPE_p_AMsyncState sync_state) {
    AMchangeHashes ret = new AMchangeHashes(automergePINVOKE.AMsyncStateLastSentHeads(SWIGTYPE_p_AMsyncState.getCPtr(sync_state)), true);
    return ret;
  }

  public static AMsyncHaves AMsyncStateTheirHaves(SWIGTYPE_p_AMsyncState sync_state, SWIGTYPE_p_bool has_value) {
    AMsyncHaves ret = new AMsyncHaves(automergePINVOKE.AMsyncStateTheirHaves(SWIGTYPE_p_AMsyncState.getCPtr(sync_state), SWIGTYPE_p_bool.getCPtr(has_value)), true);
    return ret;
  }

  public static AMchangeHashes AMsyncStateTheirHeads(SWIGTYPE_p_AMsyncState sync_state, SWIGTYPE_p_bool has_value) {
    AMchangeHashes ret = new AMchangeHashes(automergePINVOKE.AMsyncStateTheirHeads(SWIGTYPE_p_AMsyncState.getCPtr(sync_state), SWIGTYPE_p_bool.getCPtr(has_value)), true);
    return ret;
  }

  public static AMchangeHashes AMsyncStateTheirNeeds(SWIGTYPE_p_AMsyncState sync_state, SWIGTYPE_p_bool has_value) {
    AMchangeHashes ret = new AMchangeHashes(automergePINVOKE.AMsyncStateTheirNeeds(SWIGTYPE_p_AMsyncState.getCPtr(sync_state), SWIGTYPE_p_bool.getCPtr(has_value)), true);
    return ret;
  }

  public static SWIGTYPE_p_AMobjId ROOT {
    get {
      global::System.IntPtr cPtr = automergePINVOKE.ROOT_get();
      SWIGTYPE_p_AMobjId ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMobjId(cPtr, false);
      return ret;
    } 
  }

  public static AMchangeHashes NOW {
    get {
      global::System.IntPtr cPtr = automergePINVOKE.NOW_get();
      AMchangeHashes ret = (cPtr == global::System.IntPtr.Zero) ? null : new AMchangeHashes(cPtr, false);
      return ret;
    } 
  }

}

}

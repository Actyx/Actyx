//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Actyx.Documents.Driver {

public class AMvalue : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal AMvalue(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(AMvalue obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~AMvalue() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          automergePINVOKE.delete_AMvalue(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public AMvalue_Tag tag {
    set {
      automergePINVOKE.AMvalue_tag_set(swigCPtr, (int)value);
    } 
    get {
      AMvalue_Tag ret = (AMvalue_Tag)automergePINVOKE.AMvalue_tag_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_AMactorId actor_id {
    set {
      automergePINVOKE.AMvalue_actor_id_set(swigCPtr, SWIGTYPE_p_AMactorId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = automergePINVOKE.AMvalue_actor_id_get(swigCPtr);
      SWIGTYPE_p_AMactorId ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMactorId(cPtr, false);
      return ret;
    } 
  }

  public bool boolean {
    set {
      automergePINVOKE.AMvalue_boolean_set(swigCPtr, value);
    } 
    get {
      bool ret = automergePINVOKE.AMvalue_boolean_get(swigCPtr);
      return ret;
    } 
  }

  public AMbyteSpan bytes {
    set {
      automergePINVOKE.AMvalue_bytes_set(swigCPtr, AMbyteSpan.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = automergePINVOKE.AMvalue_bytes_get(swigCPtr);
      AMbyteSpan ret = (cPtr == global::System.IntPtr.Zero) ? null : new AMbyteSpan(cPtr, false);
      return ret;
    } 
  }

  public AMchangeHashes change_hashes {
    set {
      automergePINVOKE.AMvalue_change_hashes_set(swigCPtr, AMchangeHashes.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = automergePINVOKE.AMvalue_change_hashes_get(swigCPtr);
      AMchangeHashes ret = (cPtr == global::System.IntPtr.Zero) ? null : new AMchangeHashes(cPtr, false);
      return ret;
    } 
  }

  public AMchanges changes {
    set {
      automergePINVOKE.AMvalue_changes_set(swigCPtr, AMchanges.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = automergePINVOKE.AMvalue_changes_get(swigCPtr);
      AMchanges ret = (cPtr == global::System.IntPtr.Zero) ? null : new AMchanges(cPtr, false);
      return ret;
    } 
  }

  public long counter {
    set {
      automergePINVOKE.AMvalue_counter_set(swigCPtr, value);
    } 
    get {
      long ret = automergePINVOKE.AMvalue_counter_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_AMdoc doc {
    set {
      automergePINVOKE.AMvalue_doc_set(swigCPtr, SWIGTYPE_p_AMdoc.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = automergePINVOKE.AMvalue_doc_get(swigCPtr);
      SWIGTYPE_p_AMdoc ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMdoc(cPtr, false);
      return ret;
    } 
  }

  public double f64 {
    set {
      automergePINVOKE.AMvalue_f64_set(swigCPtr, value);
    } 
    get {
      double ret = automergePINVOKE.AMvalue_f64_get(swigCPtr);
      return ret;
    } 
  }

  public long int_ {
    set {
      automergePINVOKE.AMvalue_int__set(swigCPtr, value);
    } 
    get {
      long ret = automergePINVOKE.AMvalue_int__get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_AMobjId obj_id {
    set {
      automergePINVOKE.AMvalue_obj_id_set(swigCPtr, SWIGTYPE_p_AMobjId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = automergePINVOKE.AMvalue_obj_id_get(swigCPtr);
      SWIGTYPE_p_AMobjId ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMobjId(cPtr, false);
      return ret;
    } 
  }

  public string str {
    set {
      automergePINVOKE.AMvalue_str_set(swigCPtr, value);
    } 
    get {
      string ret = automergePINVOKE.AMvalue_str_get(swigCPtr);
      return ret;
    } 
  }

  public AMstrings strings {
    set {
      automergePINVOKE.AMvalue_strings_set(swigCPtr, AMstrings.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = automergePINVOKE.AMvalue_strings_get(swigCPtr);
      AMstrings ret = (cPtr == global::System.IntPtr.Zero) ? null : new AMstrings(cPtr, false);
      return ret;
    } 
  }

  public long timestamp {
    set {
      automergePINVOKE.AMvalue_timestamp_set(swigCPtr, value);
    } 
    get {
      long ret = automergePINVOKE.AMvalue_timestamp_get(swigCPtr);
      return ret;
    } 
  }

  public ulong uint_ {
    set {
      automergePINVOKE.AMvalue_uint__set(swigCPtr, value);
    } 
    get {
      ulong ret = automergePINVOKE.AMvalue_uint__get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_AMsyncMessage sync_message {
    set {
      automergePINVOKE.AMvalue_sync_message_set(swigCPtr, SWIGTYPE_p_AMsyncMessage.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = automergePINVOKE.AMvalue_sync_message_get(swigCPtr);
      SWIGTYPE_p_AMsyncMessage ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMsyncMessage(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_AMsyncState sync_state {
    set {
      automergePINVOKE.AMvalue_sync_state_set(swigCPtr, SWIGTYPE_p_AMsyncState.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = automergePINVOKE.AMvalue_sync_state_get(swigCPtr);
      SWIGTYPE_p_AMsyncState ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_AMsyncState(cPtr, false);
      return ret;
    } 
  }

  public AMvalue() : this(automergePINVOKE.new_AMvalue(), true) {
  }

}

}

# Pull request check and validation workflow
name: Validate PR

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "master"

env:
  RUST_BACKTRACE: 1

jobs:
  check-release-version:
    runs-on: [self-hosted, Linux]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Validate release-version
        run: make validate-release-version assert-clean
      - run: make clean

  check:
    runs-on: [self-hosted, Linux]

    strategy:
      matrix:
        product: [release, rust, js, node-manager-bindings]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Validate ${{matrix.product}}
        run: make validate-${{matrix.product}} assert-clean
      - run: make clean

  check-android:
    runs-on: [self-hosted, Linux]

    steps:
      - uses: actions/checkout@v3
      - name: Validate Android
        run: |
          set -e
          ./jvm/os-android/bin/create-dummy-keystore.sh
          cat jvm/os-android/actyx-local/actyx.properties
          make validate-os-android assert-clean
      - run: make clean

  validate:
    runs-on: [self-hosted, Linux]
    needs: check
    timeout-minutes: 60

    strategy:
      matrix:
        product: [os, netsim]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Validate ${{matrix.product}}
        run: make validate-${{matrix.product}} assert-clean
      - run: make clean

  validate-docs:
    runs-on: [self-hosted, Linux]

    steps:
      # Unlimited fetch depth so the release tool works
      # ALL actions using the release tool NEED this
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Validate docs
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_ACCESS_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
        run: |
          set -e
          echo "Building cosmos-release"
          cd rust/release
          cargo test --locked --release --all-features
          echo "Building docs"
          cd ../../web/developer.actyx.com/
          source ~/.nvm/nvm.sh
          nvm install
          npm ci
          npm run build
          test -n "$NETLIFY_AUTH_TOKEN" && npm run deploy:draft "Validation pipeline"
          make -C ../.. assert-clean
      - run: make clean

  notify-discord:
    runs-on: [self-hosted, Linux]
    if: ${{ always() }}

    needs:
      - check-android
      - validate
      - validate-docs

    steps:
      - uses: jmg-duarte/discord-workflow-status@83dc78bf9ece4963250e5b73da83c06638c7a3bf
        with:
          # GitHub actions does not allow secrets to be used in `if` clauses
          # hence, instead of using an env variable, checking in the `if` and then
          # using the env variable in parameters, I've updated the discord action to be
          # "strict" about missing required variables, so they can be used in forks
          # For more information on the env approach, see the following:
          # https://stackoverflow.com/a/72926257
          strict: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}

# Integration test pipeline for manual triggers and debugging
# Note: This doesn't build any artifacts, so make sure all needed artifacts are
# available for `AX_GIT_HASH`
trigger: none

pr: none

stages:
  - stage: integration
    displayName: Manual integration test
    pool:
      name: Native
    jobs:
      - job: integrationTest
        displayName: Integration Test
        steps:
          - bash: |
              set -e
              build/bin/install-vault.sh
              make prepare-js all-js
              cd integration
              nvm use
              npm install
              npm test
            env:
              # Map secrets to env vars. This needs to be done manually
              AWS_ACCESS_KEY_ID: $(SECRET_AWS_ACCESS_KEY_ID)
              AWS_SECRET_ACCESS_KEY: $(SECRET_AWS_SECRET_ACCESS_KEY)
              BASH_ENV: "~/.bashrc"
            displayName: npm test
          - publish: $(System.DefaultWorkingDirectory)/integration/logs
            condition: failed()
            artifact: integration-test-logs-attempt$(System.JobAttempt)
      - job: cleanup
        displayName: Integration test cleanup tasks
        condition: always()
        steps:
          - bash: |
              set -e
              cd integration
              nvm use
              npm install
              npm run cleanup 43200
            env:
              # Map secrets to env vars. This needs to be done manually
              AWS_ACCESS_KEY_ID: $(SECRET_AWS_ACCESS_KEY_ID)
              AWS_SECRET_ACCESS_KEY: $(SECRET_AWS_SECRET_ACCESS_KEY)
              BASH_ENV: "~/.bashrc"
            name: cleanupInstances
            displayName: Clean up old integration test instances

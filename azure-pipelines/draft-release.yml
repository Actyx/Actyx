# Draft release pipeline
#

trigger:
  branches:
    include:
      - master
      - proj/*
pr:
  autoCancel: true
  branches:
    include:
      - master
      - proj/*

variables:
  SLACK_HOOK: ***REMOVED***

stages:
  - stage: draftRelease
    displayName: Draft release
    pool:
      name: Native
    dependsOn: []
    jobs:
      - job: release
        displayName: Draft release
        steps:
          - checkout: self # self represents the repo where the initial Pipelines YAML file was found
            clean: true # whether to fetch clean each time
            submodules: recursive # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
            persistCredentials: true # set to 'true' to leave the OAuth token in the Git config after the initial fetch
          - bash: |
              cd release
              source ~/.nvm/nvm.sh
              nvm use
              npm install
              echo "Building cosmos-release"
              npm run build
              echo "Running release"
              echo "Repo dir: $REPO_DIR"
              echo "Target rev: $TARGET_REV"
              echo "Setting git email and username"
              git config user.email "cosmos-release@actyx.io"
              git config user.name "cosmos-release"
              echo "Pruning local tags"
              git fetch --force --prune origin "+refs/tags/*:refs/tags/*"
              echo "Getting tags from remote"
              git fetch --all --tags
              npm run cli -- release 1 $TARGET_REV $ARM_NF --localRepo $REPO_DIR --skipMalformed --skipIfNoNotes --draft
            env:
              ARM_NF: $(RELEASE_NETLIFY_ACCESS_TOKEN)
              REPO_DIR: $(Build.SourcesDirectory)
              TARGET_REV: $(Build.SourceVersion)
            displayName: run release

  - stage: notifySuccess
    dependsOn:
      - draftRelease
    displayName: Notify Slack on successful build
    jobs:
      - template: jobs-notify-success.yml

jobs:
  - job: mainModules
    dependsOn: getBuildString
    variables:
      BUILD_STRING: $[ dependencies.getBuildString.outputs['setBuildString.BUILD_STRING'] ]
    displayName: "Modules:"
    container: buildrs_x64_latest
    pool:
      name: Native
    strategy:
      matrix:
        pond:
          MODULE: "pond"
        build:
          MODULE: "build"
    workspace:
      clean: all
    steps:
      - script: |
          printf "Setting CURRENT_MODULE_BUILD_TAG to [build-$MODULE].\n"
          echo "##vso[task.setvariable variable=CURRENT_MODULE_BUILD_TAG][build-$MODULE]"
        displayName: Set $CURRENT_MODULE_BUILD_TAG

      - script: |

          # The reason we're using this method and not the Node.js tool installer (https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/tool/node-js?view=azure-devops)
          # is so we can use the current `.nvmrc`
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          source "$NVM_DIR/nvm.sh"
          nvm install

          # There are two ways to get sbt - via SDKMAN or via the Debian apt repo
          # comment/uncomment one another if one stops working for some reason

          if ! [ -x "$(command -v sbt)" ]; then
          # 1. Get SBT via SDKMAN - https://www.scala-sbt.org/1.x/docs/Installing-sbt-on-Linux.html
          #  echo "Attempting to install SBT using SDKMAN"
          #  curl -s "https://get.sdkman.io" | bash
          #  source "$HOME/.sdkman/bin/sdkman-init.sh" && sdk version
          #  sdk list java
          #  # Recommended version was 11.0.4.hs-adpt but it's gone from SDKMAN by now, so using one above
          #  sdk install java 11.0.8.hs-adpt
          #  sdk install sbt

          # 2. Get SBT via Debian apt repo
          echo "Attempting to install SBT using the Debian SBT APT repo (bintray)"
          echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt.list
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
          sudo apt-get update && sudo apt-get install sbt -y

          else
            echo "SBT already installed, skipping install."
          fi
        displayName: Install nvm & sbt
        condition: contains(variables['BUILD_STRING'],variables['CURRENT_MODULE_BUILD_TAG'])

      - template: steps-bootstrap.yml

      # TODO Change /home/builder to $HOME below?
      - script: |
          source "$NVM_DIR/nvm.sh"
          nvm use
          export PATH=$PATH:/home/builder/bin
          build/bin/build-module.sh $(MODULE)
        displayName: "Build $(MODULE)"
        env:
          # Map secrets to env vars
          DOCKERHUB_PASS: $(SECRET_DOCKERHUB_PASS)
          GITHUB_PKG_PASS: $(SECRET_GITHUB_PKG_PASS)
          # $(HOME) is resolved to the outer agents $HOME
          NVM_DIR: /home/builder/.nvm
          # produce large dumps when rust tests fail
          RUST_BACKTRACE: full
        condition: contains(variables['BUILD_STRING'],variables['CURRENT_MODULE_BUILD_TAG'])

      - script: |
          build/bin/post-to-slack.sh -s "Main Modules - $MODULE" -a "danger"
        condition: failed()
        displayName: "Ping Slack on failing job"

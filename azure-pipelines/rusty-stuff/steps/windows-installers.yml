steps:
  - download: current
    artifact: actyxos-bin-win64
    condition: contains(variables['BUILD_STRING'],'[build-rt-master]')
  - script: |
      cd $(INSTALLER_DIR)
      cp $(Pipeline.Workspace)/actyxos-bin-win64/win64/ax.exe ../actyxos-node-manager/bin/win32/
      (cd ../actyxos-node-manager && npm install && npm run package -- --platform win32 --arch x64)
      mv $(Pipeline.Workspace)/actyxos-bin-win64/win64/{actyxos,ax}.exe .
      mv ../actyxos-node-manager/out/ActyxOS-Node-Manager-win32-x64 ./node-manager
      ls -alh .
      export DIST_DIR=`pwd`/dist-installer
      mkdir -p $DIST_DIR
      SRC_DIR=`pwd` ./build.sh
    displayName: Create ActyxOS Windows Installer
    condition: contains(variables['BUILD_STRING'],'[build-rt-master]')
  - publish: $(System.DefaultWorkingDirectory)/$(INSTALLER_DIR)/dist-installer
    condition: and(succeeded(),contains(variables['BUILD_STRING'],'[build-rt-master]'))
  - task: AzureCLI@2
    # No, there would be the nicely looking AzureFileCopy@4 task, which would use the `azcopy` cli (yes, it's not
    # included in `az`), to upload a bunch of files:
    # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-file-copy?view=azure-devops.
    #
    # Now, that task currently only works under Windows.
    # Next up: Directly use `azcopy`. No built-in authentication via azure pipelines, bummer.
    # Luckily, the `az` cli offers a legacy command `storage  blob upload-batch`.
    displayName: Copy Artifacts To Azure Blob Store
    inputs:
      azureSubscription: azure-ax-ci
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az --version
        az account show
        # artifacts are under <cwd>/$(INSTALLER_DIR)/dist-installer
        az storage blob upload-batch -s $(System.DefaultWorkingDirectory)/$(INSTALLER_DIR)/dist-installer -d https://axartifacts.blob.core.windows.net/artifacts/ --destination-path $(Build.SourceVersion)/
    condition: and(succeeded(),contains(variables['BUILD_STRING'],'[build-rt-master]'))
  - script: |
      build/bin/post-to-slack.sh -s "ActyxOS Windows Installer - $INSTALLER_DIR" -a "danger"
    condition: failed()
    displayName: Ping Slack on failing job

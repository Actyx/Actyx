<!--
  Configuration of Windows Service Wrapper for Actyx
  See the following link for schema and friends:
  https://github.com/winsw/winsw/blob/v3/docs/xml-config-file.md

  If you break the Actyx Service at runtime, you can fix it on the machine by hand
  as this file will be available after installation. After fixing it, you can then
  uninstall Actyx again.
-->

<service>
  <!-- ID of the service. It should be unique accross the Windows system-->
  <id>actyx</id>

  <!-- Display name of the service -->
  <name>Actyx</name>

  <!-- Service description -->
  <description>A windows service wrapper for Actyx</description>

  <!-- Path to the executable, which should be started -->
  <executable>%BASE%\ax.exe</executable>
  <arguments>run</arguments>

  <!--
      OPTION: serviceaccount
      Defines account, under which the service should run.
    -->
  <serviceaccount>
    <user>LocalService</user>
  </serviceaccount>

  <!--
      OPTION: onfailure
      Defines a sequence of actions, which should be performed if the managed executable fails.
      Supported actions: restart, reboot, none
    -->
  <onfailure action="restart" delay="5 sec" />

  <!--
      OPTION: priority
      Desired process priority.
      Possible values: Normal, Idle, High, RealTime, BelowNormal, AboveNormal
      Default value: Normal
    -->
  <priority>Normal</priority>

  <!--
      OPTION: stoptimeout
      Time to wait for the service to gracefully shutdown the executable before we forcibly kill it
      Default value: 15 seconds
    -->
  <stoptimeout>15 sec</stoptimeout>

  <!--
      OPTION: stopparentprocessfirst
      If set, WinSW will terminate the parent process before stopping the children.
      Default value: true
    -->
  <stopparentprocessfirst>true</stopparentprocessfirst>


  <!--
        OPTION: startmode
        Defines start mode of the service.
        Supported modes: Automatic, Manual, Boot, System (latter ones are supported for driver services only)
        Default mode: Automatic
      -->
  <startmode>Automatic</startmode>

  <!--
        OPTION: waithint
        The estimated time required for a pending stop operation.
        Before the specified amount of time has elapsed, the service should make its next call to the SetServiceStatus function.
        Otherwise the service will be marked as non-responding
        Default value: 15 seconds
      -->
  <waithint>15 sec</waithint>

  <!--
        OPTION: sleeptime
        The time before the service should make its next call to the SetServiceStatus function.
        Do not wait longer than the wait hint. A good interval is one-tenth of the wait hint but not less than 1 second and not more than 10 seconds.
        Default value: 1 second
      -->
  <sleeptime>1 sec</sleeptime>

  <!--
      OPTION: log
      Defines logging mode for logs produced by the executable.
      Supported modes:
        * append - Rust update the existing log
        * none - Do not save executable logs to the disk
        * reset - Wipe the log files on startup
        * roll - Roll logs based on size
        * roll-by-time - Roll logs based on time
        * rotate - Rotate logs based on size, (8 logs, 10MB each). This mode is deprecated, use "roll"
      Default mode: append

      Each mode has different settings.
      See https://github.com/kohsuke/winsw/blob/master/doc/loggingAndErrorReporting.md for more details
    -->
  <log mode="roll-by-size">
    <sizeThreshold>10240</sizeThreshold>
    <keepFiles>8</keepFiles>
  </log>

  <!--
      OPTION: env
      Sets or overrides environment variables.
      There may be multiple entries configured on the top level.
    -->
  <!--
    <env name="RUST_LOG" value="TRACE" />
    -->

</service>

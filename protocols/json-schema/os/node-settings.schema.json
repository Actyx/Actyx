{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$id": "https://developer.actyx.com/schemas/os/node-settings.schema.json",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "general",
    "licensing",
    "services"
  ],
  "properties": {
    "general": {
      "$ref": "#/definitions/General"
    },
    "licensing": {
      "$ref": "#/definitions/Licensing"
    },
    "services": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "eventService": {
          "$ref": "#/definitions/Services/EventService"
        },
        "consoleService": {
          "$ref": "#/definitions/Services/ConsoleService"
        },
        "dockerRuntime": {
          "$ref": "#/definitions/Services/DockerRuntime"
        },
        "webViewRuntime": {
          "$ref": "#/definitions/Services/WebViewRuntime"
        }
      }
    }
  },
  "definitions": {
    "Basic": {
      "Key": {
        "type": "string",
        "minLength": 128,
        "maxLength": 128
      },
      "NonEmptyString": {
        "type": "string",
        "minLength": 1
      },
      "MultiAddr": {
        "type": "string"
      },
      "LicenseKey": {
        "type": "string",
        "minLength": 64
      }
    },
    "Composite": {
      "LogLevel": {
        "type": "string",
        "enum": [
          "TRACE",
          "DEBUG",
          "WARN",
          "INFO",
          "ERROR",
          "FATAL"
        ],
        "default": "INFO"
      },
      "License": {
        "oneOf": [
          {
            "$ref": "#/definitions/Basic/LicenseKey"
          },
          {
            "type": "string",
            "const": "development"
          }
        ],
        "default": "development"
      }
    },
    "General": {
      "type": "object",
      "required": [
        "swarmKey",
        "bootstrapNodes",
        "displayName"
      ],
      "additionalProperties": false,
      "properties": {
        "swarmKey": {
          "$ref": "#/definitions/Basic/Key",
          "default": "L2tleS9zd2FybS9wc2svMS4wLjAvCi9iYXNlMTYvCmQ3YjBmNDFjY2ZlYTEyM2FkYTJhYWI0MmY2NjRjOWUyNWUwZWYyZThmNGJjNjJlOTg3NmE3NDU1MTc3ZWQzOGIK"
        },
        "bootstrapNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Basic/MultiAddr"
          },
          "default": ["/ip4/3.125.108.42/tcp/4001/ipfs/QmUD1mA3Y8qSQB34HmgSNcxDss72UHW2kzQy7RdVstN2hH"],
          "uniqueItems": true,
          "description": "Addresses of peers to initially connect for bootstrapping. These must be multiaddresses containing a peer id. E.g. /dns4/demo-bootstrap.actyx.net/tcp/4001/p2p/QmUD1mA3Y8qSQB34HmgSNcxDss72UHW2kzQy7RdVstN2hH"
        },
        "announceAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Basic/MultiAddr"
          },
          "minItems": 0,
          "uniqueItems": true,
          "default": [],
          "description": "Manually configured addresses to announce. These must be multiaddresses without peer id, e.g. /ip4/1.2.3.4/tcp/4001"
        },
        "displayName": {
          "$ref": "#/definitions/Basic/NonEmptyString",
          "default": "Default Node"
        },
        "logLevels": {
          "type": "object",
          "properties": {
            "os": {
              "$ref": "#/definitions/Composite/LogLevel"
            },
            "apps": {
              "$ref": "#/definitions/Composite/LogLevel"
            }
          }
        },
        "requireAuthentication": {
          "type": "boolean",
          "default": false
        },
        "authorizedKeys": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 32,
            "maxLength": 64
          },
          "minItems": 0,
          "uniqueItems": true,
          "default": []
        }
      }
    },
    "Licensing": {
      "type": "object",
      "required": [
        "os",
        "apps"
      ],
      "additionalProperties": false,
      "properties": {
        "os": {
          "$ref": "#/definitions/Composite/License",
          "default": "development"
        },
        "apps": {
          "type": "object",
          "propertyNames": {
            "pattern": "^(\\d|\\w|-|_)+(\\.(\\d|\\w|-|_)+)*$"
          },
          "additionalProperties": {
            "$ref": "#/definitions/Composite/License"
          },
          "description": "Key-value pairs where the key is an app's ID.",
          "default": {}
        }
      }
    },
    "Services": {
      "EventService": {
        "type": "object",
        "required": [
          "topic"
        ],
        "additionalProperties": false,
        "properties": {
          "topic": {
            "$ref": "#/definitions/Basic/NonEmptyString",
            "default": "default-topic"
          },
          "readOnly": {
            "type": "boolean",
            "default": false
          },
          "_internal": {
            "type": "object",
            "required": [],
            "additionalProperties": true
          }
        }
      },
      "BlobService": {
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {}
      },
      "ConsoleService": {
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {}
      },
      "DockerRuntime": {
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {}
      },
      "WebViewRuntime": {
        "type": "object",
        "required": [],
        "additionalProperties": false,
        "properties": {}
      }
    }
  }
}
